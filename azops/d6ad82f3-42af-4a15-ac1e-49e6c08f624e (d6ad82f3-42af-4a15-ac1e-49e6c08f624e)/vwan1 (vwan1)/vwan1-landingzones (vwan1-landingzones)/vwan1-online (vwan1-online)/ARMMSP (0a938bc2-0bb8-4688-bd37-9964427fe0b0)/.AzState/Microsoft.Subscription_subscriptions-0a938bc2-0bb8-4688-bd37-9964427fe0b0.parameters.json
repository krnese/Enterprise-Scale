{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "input": {
      "value": {
        "Type": "/subscriptions",
        "Id": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0",
        "Name": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
        "DisplayName": "ARMMSP",
        "Children": null,
        "properties": {
          "policyDefinitions": [
            {
              "Name": "1a1e0d3a-a7fd-4539-9499-c5df5025df16",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/1a1e0d3a-a7fd-4539-9499-c5df5025df16",
              "ResourceName": "1a1e0d3a-a7fd-4539-9499-c5df5025df16",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/1a1e0d3a-a7fd-4539-9499-c5df5025df16",
              "Properties": {
                "Description": null,
                "DisplayName": "AzBackupAppCentric",
                "Mode": "All",
                "Parameters": {
                  "listOfImageIdToInclude": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "Optional: List of VM images that have supported Windows OS to add to scope",
                      "description": "Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'"
                    },
                    "defaultValue": []
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Compute/imageId",
                            "in": "[parameters('listOfImageIdToInclude')]"
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "in": [
                                  "2008-R2-SP1",
                                  "2008-R2-SP1-smalldisk",
                                  "2012-Datacenter",
                                  "2012-Datacenter-smalldisk",
                                  "2012-R2-Datacenter",
                                  "2012-R2-Datacenter-smalldisk",
                                  "2016-Datacenter",
                                  "2016-Datacenter-Server-Core",
                                  "2016-Datacenter-Server-Core-smalldisk",
                                  "2016-Datacenter-smalldisk",
                                  "2016-Datacenter-with-Containers",
                                  "2016-Datacenter-with-RDSH",
                                  "2019-Datacenter",
                                  "2019-Datacenter-Core",
                                  "2019-Datacenter-Core-smalldisk",
                                  "2019-Datacenter-Core-with-Containers",
                                  "2019-Datacenter-Core-with-Containers-smalldisk",
                                  "2019-Datacenter-smalldisk",
                                  "2019-Datacenter-with-Containers",
                                  "2019-Datacenter-with-Containers-smalldisk",
                                  "2019-Datacenter-zhcn"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServerSemiAnnual"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "in": [
                                  "Datacenter-Core-1709-smalldisk",
                                  "Datacenter-Core-1709-with-Containers-smalldisk",
                                  "Datacenter-Core-1803-with-Containers-smalldisk"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServerHPCPack"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServerHPCPack"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftSQLServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2016"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2016-BYOL"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2012R2"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2012R2-BYOL"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftRServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "MLServer-WS2016"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftVisualStudio"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "VisualStudio",
                                  "Windows"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftDynamicsAX"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Dynamics"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "equals": "Pre-Req-AX7-Onebox-U8"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "microsoft-ads"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "windows-data-science-vm"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsDesktop"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Windows-10"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "resourceGroupName": "[resourceGroup().name]",
                      "type": "Microsoft.RecoveryServices/backupprotecteditems",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "existenceCondition": {
                        "field": "name",
                        "like": "*"
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of Azure Virtual Machines"
                                }
                              },
                              "vmRgName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource group containing the virtual machines."
                                }
                              },
                              "location": {
                                "type": "string",
                                "metadata": {
                                  "description": "Location for VM and Backup vault"
                                }
                              }
                            },
                            "variables": {
                              "backupFabric": "Azure",
                              "backupPolicy": "DefaultPolicy",
                              "v2VmType": "Microsoft.Compute/virtualMachines",
                              "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                              "v2Vm": "vm;iaasvmcontainerv2;",
                              "vaultName": "[concat(resourceGroup().name, '-backupvault')]"
                            },
                            "resources": [
                              {
                                "name": "[variables('vaultName')]",
                                "type": "Microsoft.RecoveryServices/vaults",
                                "apiVersion": "2016-06-01",
                                "location": "[parameters('location')]",
                                "properties": {},
                                "sku": {
                                  "name": "Standard"
                                }
                              },
                              {
                                "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                                "apiVersion": "2016-12-01",
                                "location": "[parameters('location')]",
                                "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                "dependsOn": [
                                  "[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
                                ],
                                "properties": {
                                  "protectedItemType": "[variables('v2VmType')]",
                                  "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'),variables('backupPolicy'))]",
                                  "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                                }
                              }
                            ],
                            "outputs": {
                              "status": {
                                "type": "string",
                                "value": "[concat('Backup enabled successfully for VM:', ' ', parameters('vmName'))]"
                              }
                            }
                          },
                          "parameters": {
                            "vmName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "vmRgName": {
                              "value": "[resourceGroup().name]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "5a1eb11f-aac8-43bb-b714-775f17ddf0b1",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/5a1eb11f-aac8-43bb-b714-775f17ddf0b1",
              "ResourceName": "5a1eb11f-aac8-43bb-b714-775f17ddf0b1",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/5a1eb11f-aac8-43bb-b714-775f17ddf0b1",
              "Properties": {
                "Description": null,
                "DisplayName": "Databricks",
                "Mode": "All",
                "Parameters": {},
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Databricks/workspaces"
                      },
                      {
                        "field": "Microsoft.DataBricks/workspaces/parameters.customVirtualNetworkId.value",
                        "exists": "false"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deny"
                  }
                }
              }
            },
            {
              "Name": "868f4d17-5ef1-424d-a012-ca6a743fcdc2",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/868f4d17-5ef1-424d-a012-ca6a743fcdc2",
              "ResourceName": "868f4d17-5ef1-424d-a012-ca6a743fcdc2",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/868f4d17-5ef1-424d-a012-ca6a743fcdc2",
              "Properties": {
                "Description": "",
                "DisplayName": "Audit locations that are outside of US regions",
                "Mode": "Indexed",
                "Parameters": {
                  "listOfAllowedLocations": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "Allowed locations",
                      "description": "The list of locations that can be specified when deploying resources.",
                      "strongType": "location"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "location",
                        "notIn": "[parameters('listOfAllowedLocations')]"
                      },
                      {
                        "field": "location",
                        "notEquals": "global"
                      },
                      {
                        "field": "type",
                        "notEquals": "Microsoft.AzureActiveDirectory/b2cDirectories"
                      }
                    ]
                  },
                  "then": {
                    "effect": "audit"
                  }
                }
              }
            },
            {
              "Name": "91696727-c304-4202-96a9-2c47ab296d59",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/91696727-c304-4202-96a9-2c47ab296d59",
              "ResourceName": "91696727-c304-4202-96a9-2c47ab296d59",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/91696727-c304-4202-96a9-2c47ab296d59",
              "Properties": {
                "Description": "Enforces existence of 'applicationOwner' tag on resource groups.",
                "DisplayName": "Require 'applicationOwner' tag on resource groups",
                "Mode": "All",
                "Parameters": {
                  "tagName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Tag Name",
                      "description": "Name of the tag, such as 'environment'"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                      },
                      {
                        "field": "[concat('tags[', parameters('tagName'), ']')]",
                        "exists": "false"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deny"
                  }
                }
              }
            },
            {
              "Name": "91696727-c304-4202-96a9-2c47ab296d5d",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/91696727-c304-4202-96a9-2c47ab296d5d",
              "ResourceName": "91696727-c304-4202-96a9-2c47ab296d5d",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/91696727-c304-4202-96a9-2c47ab296d5d",
              "Properties": {
                "Description": "Appends the 'applicationOwner' tag with its value from the resource group when any resource which is missing this tag is created or updated. Does not modify the tags of resources created before this policy was applied until those resources are changed.",
                "DisplayName": "Inherit 'applicationOwner' tag from RG to resources",
                "Mode": "Indexed",
                "Parameters": {
                  "tagName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Tag Name",
                      "description": "Name of the tag, such as 'environment'"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "[concat('tags[', parameters('tagName'), ']')]",
                    "exists": "false"
                  },
                  "then": {
                    "effect": "append",
                    "details": [
                      {
                        "field": "[concat('tags[', parameters('tagName'), ']')]",
                        "value": "[resourceGroup().tags[parameters('tagName')]]"
                      }
                    ]
                  }
                }
              }
            },
            {
              "Name": "a003e510-db91-41f1-b05c-54fdb7c578a9",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/a003e510-db91-41f1-b05c-54fdb7c578a9",
              "ResourceName": "a003e510-db91-41f1-b05c-54fdb7c578a9",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/a003e510-db91-41f1-b05c-54fdb7c578a9",
              "Properties": {
                "Description": null,
                "DisplayName": "AppCentric Linux Backup",
                "Mode": "All",
                "Parameters": {
                  "listOfImageIdToInclude": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "Optional: List of VM images that have supported Windows OS to add to scope",
                      "description": "Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'"
                    },
                    "defaultValue": []
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Compute/imageId",
                            "in": "[parameters('listOfImageIdToInclude')]"
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "RedHat"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "RHEL",
                                  "RHEL-SAP-HANA"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "SUSE"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "SLES",
                                  "SLES-HPC",
                                  "SLES-HPC-Priority",
                                  "SLES-SAP",
                                  "SLES-SAP-BYOS",
                                  "SLES-Priority",
                                  "SLES-BYOS",
                                  "SLES-SAPCAL",
                                  "SLES-Standard"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "12*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Canonical"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "UbuntuServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "14.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "16.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "18.04*LTS"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Oracle"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Oracle-Linux"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7.*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "OpenLogic"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "CentOS",
                                  "Centos-LVM",
                                  "CentOS-SRIOV"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "cloudera"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "cloudera-centos-os"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "like": "7*"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "resourceGroupName": "[resourceGroup().name]",
                      "type": "Microsoft.RecoveryServices/backupprotecteditems",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "existenceCondition": {
                        "field": "name",
                        "like": "*"
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of Azure Virtual Machines"
                                }
                              },
                              "vmRgName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource group containing the virtual machines."
                                }
                              },
                              "location": {
                                "type": "string",
                                "metadata": {
                                  "description": "Location for VM and Backup vault"
                                }
                              }
                            },
                            "variables": {
                              "backupFabric": "Azure",
                              "backupPolicy": "DefaultPolicy",
                              "v2VmType": "Microsoft.Compute/virtualMachines",
                              "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                              "v2Vm": "vm;iaasvmcontainerv2;",
                              "vaultName": "[concat(resourceGroup().name, '-backupvault')]"
                            },
                            "resources": [
                              {
                                "name": "[variables('vaultName')]",
                                "type": "Microsoft.RecoveryServices/vaults",
                                "apiVersion": "2016-06-01",
                                "location": "[parameters('location')]",
                                "properties": {},
                                "sku": {
                                  "name": "Standard"
                                }
                              },
                              {
                                "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                                "apiVersion": "2016-12-01",
                                "location": "[parameters('location')]",
                                "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                "dependsOn": [
                                  "[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
                                ],
                                "properties": {
                                  "protectedItemType": "[variables('v2VmType')]",
                                  "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'),variables('backupPolicy'))]",
                                  "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                                }
                              }
                            ],
                            "outputs": {
                              "status": {
                                "type": "string",
                                "value": "[concat('Backup enabled successfully for VM:', ' ', parameters('vmName'))]"
                              }
                            }
                          },
                          "parameters": {
                            "vmName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "vmRgName": {
                              "value": "[resourceGroup().name]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "a120f8b2-6e0c-43b0-bbca-75785872d28c",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/a120f8b2-6e0c-43b0-bbca-75785872d28c",
              "ResourceName": "a120f8b2-6e0c-43b0-bbca-75785872d28c",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/a120f8b2-6e0c-43b0-bbca-75785872d28c",
              "Properties": {
                "Description": null,
                "DisplayName": "NSG",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analyitcs workspace",
                      "description": "Select the Log Analytics workspace from dropdown list",
                      "strongType": "omsWorkspace"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "nsgName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('nsgName'), '/', 'Microsoft.Insights/setByPolicy')]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "logs": [
                                    {
                                      "category": "NetworkSecurityGroupEvent",
                                      "enabled": true
                                    },
                                    {
                                      "category": "NetworkSecurityGroupRuleCounter",
                                      "enabled": true
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "nsgName": {
                              "value": "[field('name')]"
                            }
                          }
                        }
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Append-CloudInit",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Append-CloudInit",
              "ResourceName": "Append-CloudInit",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Append-CloudInit",
              "Properties": {
                "Description": "When a RHEL VM is deployed without cloudinit then this will be deployed",
                "DisplayName": "Append-CloudInit",
                "Mode": "All",
                "Parameters": {
                  "customData": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide the custom data (cloud-init) config",
                      "displayName": "Custom Data for cloud init"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "RedHat"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "RHEL",
                                  "RHEL-SAP-HANA"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "field": "Microsoft.Compute/virtualMachines/osProfile.customData",
                        "notEquals": "[parameters('customData')]"
                      }
                    ]
                  },
                  "then": {
                    "effect": "append",
                    "details": [
                      {
                        "field": "Microsoft.Compute/virtualMachines/osProfile.customData",
                        "value": "[parameters('customData')]"
                      }
                    ]
                  }
                }
              }
            },
            {
              "Name": "Append-UTC-to-Rgs",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Append-UTC-to-Rgs",
              "ResourceName": "Append-UTC-to-Rgs",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Append-UTC-to-Rgs",
              "Properties": {
                "Description": "Policy to append UTC for created date on RGs",
                "DisplayName": "UTC created dates on RGs",
                "Mode": "Indexed",
                "Parameters": null,
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "tags[createdDate]",
                        "exists": "false"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                      }
                    ]
                  },
                  "then": {
                    "effect": "append",
                    "details": [
                      {
                        "field": "tags[createdDate]",
                        "value": "03/31/2019"
                      }
                    ]
                  }
                }
              }
            },
            {
              "Name": "audit-sql-vnet-rule",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/audit-sql-vnet-rule",
              "ResourceName": "audit-sql-vnet-rule",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/audit-sql-vnet-rule",
              "Properties": {
                "Description": "Audits the existence of a rule that enables traffic from a SQL Server to a specific subnet.",
                "DisplayName": "Audit SQL Server virtual network rule",
                "Mode": "All",
                "Parameters": {
                  "subnetId": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Subnet resourceId",
                      "description": "The resource ID of the virtual network subnet that has the rule enabled."
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.SQL/servers"
                  },
                  "then": {
                    "effect": "auditIfNotExists",
                    "details": {
                      "type": "Microsoft.SQL/servers/virtualNetworkRules",
                      "existenceCondition": {
                        "field": "Microsoft.SQL/servers/virtualNetworkRules/virtualNetworkSubnetId",
                        "equals": "[parameters('subnetId')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "audit-tde-sql",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/audit-tde-sql",
              "ResourceName": "audit-tde-sql",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/audit-tde-sql",
              "Properties": {
                "Description": "Audit transparent data encryption status for SQL databases",
                "DisplayName": "Audit transparent data encryption status",
                "Mode": "All",
                "Parameters": null,
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.SQL/servers/databases"
                      },
                      {
                        "field": "name",
                        "notEquals": "master"
                      }
                    ]
                  },
                  "then": {
                    "effect": "auditIfNotExists",
                    "details": {
                      "type": "Microsoft.SQL/servers/databases/transparentDataEncryption",
                      "name": "current",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.SQL/transparentDataEncryption.status",
                            "equals": "enabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "bf6fa3c7-b925-4ea6-a99f-7929287120fa",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/bf6fa3c7-b925-4ea6-a99f-7929287120fa",
              "ResourceName": "bf6fa3c7-b925-4ea6-a99f-7929287120fa",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/bf6fa3c7-b925-4ea6-a99f-7929287120fa",
              "Properties": {
                "Description": null,
                "DisplayName": "DINE-Register-to-SNOW",
                "Mode": "All",
                "Parameters": {
                  "snowEndpoint": {
                    "type": "String",
                    "metadata": {
                      "description": "provide endpoint for SNOW instance"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "notEquals": "snowRegistration"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "snowEndpoint": {
                              "value": "[parameters('snowEndpoint')]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "snowEndpoint": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "apiVersion": "2018-09-01-preview",
                                "type": "Microsoft.CustomProviders/resourceProviders",
                                "name": "snowRegistration",
                                "location": "eastus",
                                "properties": {
                                  "resourceTypes": [
                                    {
                                      "name": "configItems",
                                      "endpoints": [
                                        {
                                          "enabled": true,
                                          "apiVersion": "2018-09-01-preview",
                                          "endpointUri": "https://snowendpoint.azurewebsites.net/api/",
                                          "timeout": "PT1M"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "apiVersion": "2018-09-01-preview",
                                "type": "Microsoft.CustomProviders/resourceProviders/configItems",
                                "name": "snowregistration/addCi",
                                "location": "eastus",
                                "dependsOn": [
                                  "[resourceId('Microsoft.CustomProviders/resourceProviders/', 'snowRegistration')]"
                                ],
                                "properties": {
                                  "vmResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameter('name'))]",
                                  "environment": "[subscription().id]"
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "CRUD-tags-def",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/CRUD-tags-def",
              "ResourceName": "CRUD-tags-def",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/CRUD-tags-def",
              "Properties": {
                "Description": "Policy to create and modify tags",
                "DisplayName": "Policy to create and modify tags",
                "Mode": "Indexed",
                "Parameters": null,
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      }
                    ]
                  },
                  "then": {
                    "effect": "modify",
                    "details": {
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "operations": [
                        {
                          "operation": "addOrReplace",
                          "field": "tags['managedByTenant']",
                          "value": "Lighthouse"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "Name": "Deny-PublicIP",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
              "ResourceName": "Deny-PublicIP",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
              "Properties": {
                "Description": "Denies creation of Public IPs under the assigned scope.",
                "DisplayName": "Deny-PublicIP",
                "Mode": "All",
                "Parameters": {},
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/publicIPAddresses"
                  },
                  "then": {
                    "effect": "deny"
                  }
                }
              }
            },
            {
              "Name": "Deny-SQLRetention",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deny-SQLRetention",
              "ResourceName": "Deny-SQLRetention",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deny-SQLRetention",
              "Properties": {
                "Description": "Deny retention day policies if it doesn't match the value",
                "DisplayName": "Deny-SQLRetention",
                "Mode": "Indexed",
                "Parameters": {
                  "denySQLRetentionDays": {
                    "type": "String",
                    "metadata": {
                      "displayName": "SQL retention",
                      "description": "Specify SQL retention"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies"
                      },
                      {
                        "anyof": [
                          {
                            "field": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies.retentionDays",
                            "notEquals": "[parameters('denySQLRetentionDays')]"
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "deny"
                  }
                }
              }
            },
            {
              "Name": "Deploy-ASC",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC",
              "ResourceName": "Deploy-ASC",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC",
              "Properties": {
                "Description": "This policy deploys Azure Security Center",
                "DisplayName": "Policy to deploy Azure Security Center on the subscription",
                "Mode": "All",
                "Parameters": {},
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Security/pricings",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "equals": "default"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "westeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {},
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {},
                            "resources": [
                              {
                                "type": "Microsoft.Security/pricings",
                                "apiVersion": "2017-08-01-preview",
                                "name": "default",
                                "properties": {
                                  "pricingTier": "Standard"
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-AzureMigrate",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-AzureMigrate",
              "ResourceName": "Deploy-AzureMigrate",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-AzureMigrate",
              "Properties": {
                "Description": null,
                "DisplayName": "Deploy Azure Migrate if not exist on subscription",
                "Mode": "All",
                "Parameters": {
                  "azureMigrateRgName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide Migrate name that will be created for the subscription",
                      "displayName": "Resource name for Azure Migrate that will be created"
                    }
                  },
                  "resourceLocation": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide location for resources"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Migrate/migrateProjects",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[parameters('azureMigrateRgName')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "westeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "azureMigrateRgName": {
                              "value": "[parameters('azureMigrateRgName')]"
                            },
                            "resourceLocation": {
                              "value": "[parameters('resourceLocation')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "azureMigrateRgName": {
                                "type": "string"
                              },
                              "resourceLocation": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('azureMigrateRgName')]",
                                "location": "[parameters('resourceLocation')]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "[concat('migrate', uniqueString('dep'))]",
                                "resourceGroup": "[parameters('azureMigrateRgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('azureMigrateRgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects",
                                        "apiVersion": "2019-06-01",
                                        "name": "[parameters('azureMigrateRgName')]",
                                        "location": "[parameters('resourceLocation')]",
                                        "dependsOn": [],
                                        "properties": {}
                                      },
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects/Solutions",
                                        "apiVersion": "2019-06-01",
                                        "name": "[concat(parameters('azureMigrateRgName'),'/Servers-Assessment-ServerAssessment')]",
                                        "dependsOn": [
                                          "[resourceId('Microsoft.Migrate/migrateProjects/, parameters('azureMigrateRgName'))]"
                                        ],
                                        "properties": {
                                          "tool": "ServerAssessment",
                                          "purpose": "Assessment",
                                          "goal": "Servers",
                                          "status": "Active",
                                          "details": null
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects/Solutions",
                                        "apiVersion": "2019-06-01",
                                        "name": "[concat(parameters('azureMigrateRgName'),'/Servers-Discovery-ServerDiscovery')]",
                                        "properties": {
                                          "tool": "ServerDiscovery",
                                          "purpose": "Discovery",
                                          "goal": "Servers",
                                          "status": "Inactive",
                                          "details": null
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects/Solutions",
                                        "apiVersion": "2019-06-01",
                                        "name": "[concat(parameters('azureMigrateRgName'),'/Servers-Migration-ServerMigration')]",
                                        "properties": {
                                          "tool": "ServerMigration",
                                          "purpose": "Migration",
                                          "goal": "Servers",
                                          "status": "Active",
                                          "details": null
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects/Solutions",
                                        "apiVersion": "2019-06-01",
                                        "name": "[concat(parameters('azureMigrateRgName'),'/Databases-Assessment-DataMigrationAssistant')]",
                                        "properties": {
                                          "tool": "DataMigrationAssistant",
                                          "purpose": "Assessment",
                                          "goal": "Databases",
                                          "status": "Active",
                                          "details": null
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects/Solutions",
                                        "apiVersion": "2019-06-01",
                                        "name": "[concat(parameters('azMigrateRgName'),'/Databases-Migration-DatabaseMigrationService')]",
                                        "copy": {
                                          "name": "MIG-DB-Service",
                                          "count": 1
                                        },
                                        "dependsOn": [
                                          "MIG-DB-Assistant"
                                        ],
                                        "properties": {
                                          "tool": "DatabaseMigrationService",
                                          "purpose": "Migration",
                                          "goal": "Databases",
                                          "status": "Active",
                                          "details": null
                                        }
                                      },
                                      {
                                        "type": "Microsoft.Migrate/MigrateProjects/providers/locks",
                                        "apiVersion": "2016-09-01",
                                        "name": "[concat(parameters('azMigrateRgName'), '/Microsoft.Authorization/AzureMigrateDoNotDelete')]",
                                        "comments": "Resource lock Azure Migrate",
                                        "properties": {
                                          "level": "CannotDelete"
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-Diagnostics-Relay",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
              "ResourceName": "Deploy-Diagnostics-Relay",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
              "Properties": {
                "Description": "Apply diagnostic settings for Azure Relay - Log Analytics",
                "DisplayName": "Deploy-Diagnostics-Relay",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select the Log Analytics workspace from dropdown list",
                      "strongType": "omsWorkspace"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Relay/namespaces"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "name": "setByPolicy",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Relay/namespaces/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/setByPolicy')]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": true,
                                      "retentionPolicy": {
                                        "days": 0,
                                        "enabled": false
                                      },
                                      "timeGrain": null
                                    }
                                  ],
                                  "logs": []
                                }
                              }
                            ],
                            "outputs": {}
                          },
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "resourceName": {
                              "value": "[field('name')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-KeyVault",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-KeyVault",
              "ResourceName": "Deploy-KeyVault",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-KeyVault",
              "Properties": {
                "Description": null,
                "DisplayName": "Deploy Azure Key Vault if not exist on subscription",
                "Mode": "All",
                "Parameters": {
                  "keyVaultName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide Key Vault name that will be created for the subscription",
                      "displayName": "Resource name for the Key Vault that will be created"
                    }
                  },
                  "objectIdForAccessPolicy": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide objectId of principal with access to policy",
                      "displayName": "Principal with access to policy"
                    }
                  },
                  "sharedServicesRgName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide name for Resource group"
                    }
                  },
                  "resourceLocation": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide location for resources"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.KeyVault/vaults",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[parameters('keyVaultName')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "westeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "sharedServicesRgName": {
                              "value": "[parameters('sharedServicesRgName')]"
                            },
                            "keyVaultName": {
                              "value": "[parameters('keyVaultName')]"
                            },
                            "objectIdForAccessPolicy": {
                              "value": "[parameters('objectIdForAccessPolicy')]"
                            },
                            "resourceLocation": {
                              "value": "[parameters('resourceLocation')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "sharedServicesRgName": {
                                "type": "string"
                              },
                              "keyVaultName": {
                                "type": "string"
                              },
                              "resourceLocation": {
                                "type": "string"
                              },
                              "objectIdForAccessPolicy": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('sharedServicesRgName')]",
                                "location": "[parameters('resourceLocation')]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "[concat('kv', uniqueString('dep'))]",
                                "resourceGroup": "[parameters('sharedServicesRgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('sharedServicesRgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.KeyVault/vaults",
                                        "name": "[parameters('keyVaultName')]",
                                        "apiVersion": "2016-10-01",
                                        "location": "[parameters('resourceLocation')]",
                                        "tags": {
                                          "displayName": "KeyVault"
                                        },
                                        "properties": {
                                          "createMode": "default",
                                          "enabledForDeployment": true,
                                          "enabledForDiskEncryption": true,
                                          "enabledForTemplateDeployment": true,
                                          "tenantId": "[subscription().tenantId]",
                                          "sku": {
                                            "name": "premium",
                                            "family": "A"
                                          },
                                          "networkAcls": {
                                            "defaultAction": "Allow",
                                            "bypass": "AzureServices",
                                            "virtualNetworkRules": [],
                                            "ipRules": []
                                          },
                                          "accessPolicies": [
                                            {
                                              "objectId": "[parameters('objectIdForAccessPolicy')]",
                                              "tenantId": "[subscription().tenantId]",
                                              "permissions": {
                                                "keys": [
                                                  "get",
                                                  "list",
                                                  "update",
                                                  "create",
                                                  "import",
                                                  "delete",
                                                  "recover",
                                                  "backup",
                                                  "restore"
                                                ],
                                                "secrets": [
                                                  "get",
                                                  "list",
                                                  "set",
                                                  "delete",
                                                  "recover",
                                                  "backup",
                                                  "restore"
                                                ],
                                                "certificates": [
                                                  "get",
                                                  "list",
                                                  "update",
                                                  "create",
                                                  "import",
                                                  "delete",
                                                  "recover",
                                                  "deleteissuers",
                                                  "recover",
                                                  "managecontacts",
                                                  "manageissuers",
                                                  "getissuers",
                                                  "listissuers",
                                                  "setissuers"
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "Microsoft.KeyVault/vaults/providers/locks",
                                        "apiVersion": "2016-09-01",
                                        "name": "[concat(parameters('keyVaultName'), '/Microsoft.Authorization/keyVaultDoNotDelete')]",
                                        "dependsOn": [
                                          "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
                                        ],
                                        "comments": "Resource lock on key vault",
                                        "properties": {
                                          "level": "CannotDelete"
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-LogAnalytics",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-LogAnalytics",
              "ResourceName": "Deploy-LogAnalytics",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-LogAnalytics",
              "Properties": {
                "Description": null,
                "DisplayName": "Deploy Azure Log Analytics if not exist on subscription",
                "Mode": "All",
                "Parameters": {
                  "workspaceName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide Log Analytics workspace name that will be created for the subscription",
                      "displayName": "Resource name Log Analytics workspace that will be created"
                    }
                  },
                  "resourceLocation": {
                    "type": "String",
                    "metadata": {
                      "description": "Select Azure region for Log Analytics workspace",
                      "strongType": "location",
                      "displayName": "Location for Log Analytics workspace"
                    }
                  },
                  "sharedServicesrgName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide name for Resource group"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[parameters('workspaceName')]"
                          },
                          {
                            "field": "location",
                            "equals": "[parameters('resourceLocation')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "westeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "sharedServicesRgName": {
                              "value": "[parameters('sharedServicesRgName')]"
                            },
                            "workspaceName": {
                              "value": "[parameters('workspaceName')]"
                            },
                            "location": {
                              "value": "[parameters('resourceLocation')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "sharedServicesRgName": {
                                "type": "string"
                              },
                              "workspaceName": {
                                "type": "string"
                              },
                              "resourceLocation": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('sharedServicesRgName')]",
                                "location": "[parameters('resourceLocation')]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "[concat('mgmt', uniqueString('dep'))]",
                                "resourceGroup": "[parameters('sharedServicesRgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('sharedServicesRgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "apiVersion": "2017-03-15-preview",
                                        "location": "[parameters('resourceLocation')]",
                                        "name": "[parameters('workspaceName')]",
                                        "type": "Microsoft.OperationalInsights/workspaces",
                                        "properties": {
                                          "sku": {
                                            "name": "pergb2018"
                                          },
                                          "enableLogAccessUsingOnlyResourcePermissions": true
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Deploy-vNet",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet",
              "ResourceName": "Deploy-vNet",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet",
              "Properties": {
                "Description": "Deploy-vNet",
                "DisplayName": "Deploy-vNet",
                "Mode": "All",
                "Parameters": {
                  "ipam": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "ipam",
                      "description": null
                    },
                    "defaultValue": []
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Resources/resourceGroups",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "type",
                            "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                          },
                          {
                            "field": "name",
                            "like": "[concat(subscription().displayName, '-network')]"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "northeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "ipam": {
                              "value": "[parameters('ipam')]",
                              "defaultValue": []
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "ipam": {
                                "defaultValue": [
                                  {
                                    "name": "bu1-weu-msx3-vNet1",
                                    "location": "westeurope",
                                    "virtualNetworks": {
                                      "properties": {
                                        "addressSpace": {
                                          "addressPrefixes": [
                                            "10.51.217.0/24"
                                          ]
                                        }
                                      }
                                    },
                                    "networkSecurityGroups": {
                                      "properties": {
                                        "securityRules": []
                                      }
                                    },
                                    "routeTables": {
                                      "properties": {
                                        "routes": []
                                      }
                                    },
                                    "hubVirtualNetworkConnection": {
                                      "vWanVhubResourceId": "/subscriptions/99c2838f-a548-4884-a6e2-38c1f8fb4c0b/resourceGroups/contoso-global-vwan/providers/Microsoft.Network/virtualHubs/contoso-vhub-weu",
                                      "properties": {
                                        "allowHubToRemoteVnetTransit": true,
                                        "allowRemoteVnetToUseHubVnetGateways": false,
                                        "enableInternetSecurity": true
                                      }
                                    }
                                  }
                                ],
                                "type": "Array"
                              }
                            },
                            "variables": {
                              "vNetRgName": "[concat(subscription().displayName, '-network')]",
                              "vNetName": "[concat(subscription().displayName, '-vNet')]",
                              "vNetSubId": "[subscription().subscriptionId]"
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat('es-ipam-',subscription().displayName,'-RG-',copyIndex())]",
                                "location": "[parameters('ipam')[copyIndex()].location]",
                                "dependsOn": [],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "type": "Microsoft.Resources/resourceGroups",
                                        "apiVersion": "2020-06-01",
                                        "name": "[variables('vNetRgName')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": {}
                                      },
                                      {
                                        "type": "Microsoft.Resources/resourceGroups",
                                        "apiVersion": "2020-06-01",
                                        "name": "NetworkWatcherRG",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": {}
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                },
                                "copy": {
                                  "name": "ipam-rg-loop",
                                  "count": "[length(parameters('ipam'))]"
                                },
                                "condition": "[if(and(not(empty(parameters('ipam'))), equals(toLower(parameters('ipam')[copyIndex()].name),toLower(variables('vNetName')))),bool('true'),bool('false'))]"
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2020-06-01",
                                "name": "[concat('es-ipam-',subscription().displayName,'-nsg-udr-vnet-hub-vwan-peering-',copyIndex())]",
                                "dependsOn": [
                                  "[concat('es-ipam-',subscription().displayName,'-RG-',copyIndex())]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'networkSecurityGroups')]",
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/networkSecurityGroups",
                                        "name": "[concat(subscription().displayName, '-nsg')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'networkSecurityGroups'),parameters('ipam')[copyIndex()].networkSecurityGroups.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'routeTables')]",
                                        "apiVersion": "2020-05-01",
                                        "type": "Microsoft.Network/routeTables",
                                        "name": "[concat(subscription().displayName, '-udr')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'routeTables'),parameters('ipam')[copyIndex()].routeTables.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'virtualNetworks')]",
                                        "type": "Microsoft.Network/virtualNetworks",
                                        "apiVersion": "2020-05-01",
                                        "name": "[concat(subscription().displayName, '-vnet')]",
                                        "location": "[parameters('ipam')[copyIndex()].location]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-nsg')]",
                                          "[concat(subscription().displayName, '-udr')]"
                                        ],
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),parameters('ipam')[copyIndex()].virtualNetworks.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings')]",
                                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                        "apiVersion": "2020-05-01",
                                        "name": "[concat(variables('vNetName'), '/peerToHub')]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-vnet')]"
                                        ],
                                        "properties": "[if(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties,json('null'))]"
                                      },
                                      {
                                        "condition": "[and(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId'))]",
                                        "type": "Microsoft.Resources/deployments",
                                        "apiVersion": "2020-06-01",
                                        "name": "[concat('es-ipam-vWan-',subscription().displayName,'-peering-',copyIndex())]",
                                        "subscriptionId": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[2],json('null'))]",
                                        "resourceGroup": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[4],json('null'))]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-vnet')]"
                                        ],
                                        "properties": {
                                          "mode": "Incremental",
                                          "expressionEvaluationOptions": {
                                            "scope": "inner"
                                          },
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "type": "string"
                                              },
                                              "vWanVhubName": {
                                                "Type": "string",
                                                "defaultValue": ""
                                              },
                                              "allowHubToRemoteVnetTransit": {
                                                "Type": "bool",
                                                "defaultValue": true
                                              },
                                              "allowRemoteVnetToUseHubVnetGateways": {
                                                "Type": "bool",
                                                "defaultValue": false
                                              },
                                              "enableInternetSecurity": {
                                                "Type": "bool",
                                                "defaultValue": true
                                              }
                                            },
                                            "variables": {},
                                            "resources": [
                                              {
                                                "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                                                "apiVersion": "2020-05-01",
                                                "name": "[[concat(parameters('vWanVhubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                "properties": {
                                                  "remoteVirtualNetwork": {
                                                    "id": "[[parameters('remoteVirtualNetwork')]"
                                                  },
                                                  "allowHubToRemoteVnetTransit": "[[parameters('allowHubToRemoteVnetTransit')]",
                                                  "allowRemoteVnetToUseHubVnetGateways": "[[parameters('allowRemoteVnetToUseHubVnetGateways')]",
                                                  "enableInternetSecurity": "[[parameters('enableInternetSecurity')]"
                                                }
                                              }
                                            ],
                                            "outputs": {}
                                          },
                                          "parameters": {
                                            "remoteVirtualNetwork": {
                                              "value": "[concat(subscription().id,'/resourceGroups/',variables('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', concat(subscription().displayName, '-vnet'))]"
                                            },
                                            "vWanVhubName": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[8],json('null'))]"
                                            },
                                            "allowHubToRemoteVnetTransit": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.allowHubToRemoteVnetTransit,json('null'))]"
                                            },
                                            "allowRemoteVnetToUseHubVnetGateways": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.allowRemoteVnetToUseHubVnetGateways,json('null'))]"
                                            },
                                            "enableInternetSecurity": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.enableInternetSecurity,json('null'))]"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "condition": "[and(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id'))]",
                                        "type": "Microsoft.Resources/deployments",
                                        "apiVersion": "2020-06-01",
                                        "name": "[concat('es-ipam-hub-',subscription().displayName,'-peering-',copyIndex())]",
                                        "subscriptionId": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[2],json('null'))]",
                                        "resourceGroup": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[4],json('null'))]",
                                        "dependsOn": [
                                          "[concat(subscription().displayName, '-vnet')]"
                                        ],
                                        "properties": {
                                          "mode": "Incremental",
                                          "expressionEvaluationOptions": {
                                            "scope": "inner"
                                          },
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "Type": "string",
                                                "defaultValue": false
                                              },
                                              "hubName": {
                                                "Type": "string",
                                                "defaultValue": false
                                              }
                                            },
                                            "variables": {},
                                            "resources": [
                                              {
                                                "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                                "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                "apiVersion": "2020-05-01",
                                                "properties": {
                                                  "allowVirtualNetworkAccess": true,
                                                  "allowForwardedTraffic": true,
                                                  "allowGatewayTransit": true,
                                                  "useRemoteGateways": false,
                                                  "remoteVirtualNetwork": {
                                                    "id": "[[parameters('remoteVirtualNetwork')]"
                                                  }
                                                }
                                              }
                                            ],
                                            "outputs": {}
                                          },
                                          "parameters": {
                                            "remoteVirtualNetwork": {
                                              "value": "[concat(subscription().id,'/resourceGroups/',variables('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', concat(subscription().displayName, '-vnet'))]"
                                            },
                                            "hubName": {
                                              "value": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[8],json('null'))]"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                },
                                "resourceGroup": "[variables('vNetRgName')]",
                                "copy": {
                                  "name": "ipam-loop",
                                  "count": "[length(parameters('ipam'))]"
                                },
                                "condition": "[if(and(not(empty(parameters('ipam'))), equals(toLower(parameters('ipam')[copyIndex()].name),toLower(variables('vNetName')))),bool('true'),bool('false'))]"
                              }
                            ],
                            "outputs": {
                              "ipam": {
                                "condition": "[bool('true')]",
                                "type": "Int",
                                "value": "[length(parameters('ipam'))]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "dfca2fc9-7444-4bb7-b8a4-10cb5bdabf6e",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/dfca2fc9-7444-4bb7-b8a4-10cb5bdabf6e",
              "ResourceName": "dfca2fc9-7444-4bb7-b8a4-10cb5bdabf6e",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/dfca2fc9-7444-4bb7-b8a4-10cb5bdabf6e",
              "Properties": {
                "Description": null,
                "DisplayName": "central linux backup",
                "Mode": "All",
                "Parameters": {
                  "listOfImageIdToInclude": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "Optional: List of VM images that have supported Windows OS to add to scope",
                      "description": "Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'"
                    },
                    "defaultValue": []
                  },
                  "backupVaultResourceGroup": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Resource Group name for the backup vault",
                      "description": "Provide the resource group name where the backup vault is located."
                    }
                  },
                  "backupVaultRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Azure Region where the backup vault is located.",
                      "description": "Select the Azure Region where the backup vault is deployed."
                    }
                  },
                  "backupVaultName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Name of existing Backup Vault.",
                      "description": "Provide the resource name of the existing Backup Vault."
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "field": "location",
                        "equals": "[parameters('backupVaultRegion')]"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Compute/imageId",
                            "in": "[parameters('listOfImageIdToInclude')]"
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "RedHat"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "RHEL",
                                  "RHEL-SAP-HANA"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "SUSE"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "SLES",
                                  "SLES-HPC",
                                  "SLES-HPC-Priority",
                                  "SLES-SAP",
                                  "SLES-SAP-BYOS",
                                  "SLES-Priority",
                                  "SLES-BYOS",
                                  "SLES-SAPCAL",
                                  "SLES-Standard"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "12*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Canonical"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "UbuntuServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "14.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "16.04*LTS"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "18.04*LTS"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "Oracle"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Oracle-Linux"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7.*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "OpenLogic"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "CentOS",
                                  "Centos-LVM",
                                  "CentOS-SRIOV"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "6.*"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSKU",
                                    "like": "7*"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "cloudera"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "cloudera-centos-os"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "like": "7*"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "resourceGroupName": "[parameters('backupVaultResourceGroup')]",
                      "type": "Microsoft.RecoveryServices/backupprotecteditems",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "existenceCondition": {
                        "field": "name",
                        "like": "*"
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of Azure Virtual Machines"
                                }
                              },
                              "vmRgName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource group containing the virtual machines."
                                }
                              },
                              "location": {
                                "type": "string",
                                "metadata": {
                                  "description": "Location for VM and Backup vault"
                                }
                              },
                              "backupVaultResourceGroup": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource Group for Backup vault."
                                }
                              },
                              "backupVaultName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Backup Vault name."
                                }
                              }
                            },
                            "variables": {
                              "backupFabric": "Azure",
                              "backupPolicy": "DefaultPolicy",
                              "v2VmType": "Microsoft.Compute/virtualMachines",
                              "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                              "v2Vm": "vm;iaasvmcontainerv2;"
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('backupvaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                                "apiVersion": "2016-12-01",
                                "location": "[parameters('location')]",
                                "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                "dependsOn": [],
                                "properties": {
                                  "protectedItemType": "[variables('v2VmType')]",
                                  "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('backupVaultName'),variables('backupPolicy'))]",
                                  "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                                }
                              }
                            ],
                            "outputs": {
                              "status": {
                                "type": "string",
                                "value": "[concat('Backup enabled successfully for VM:', ' ', parameters('vmName'))]"
                              }
                            }
                          },
                          "parameters": {
                            "vmName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "vmRgName": {
                              "value": "[resourceGroup().name]"
                            },
                            "backupVaultName": {
                              "value": "[parameters('backupVaultName')]"
                            },
                            "backupVaultResourceGroup": {
                              "value": "[parameters('backupVaultResourceGroup')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "DINE-AzMon-NSG",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/DINE-AzMon-NSG",
              "ResourceName": "DINE-AzMon-NSG",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/DINE-AzMon-NSG",
              "Properties": {
                "Description": "Policy to enforce AzMon on NSGs",
                "DisplayName": "DINE-AzMon-NSG",
                "Mode": "Indexed",
                "Parameters": {
                  "logAnalyticsWorkspace": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace resourceId",
                      "description": "Select the Log Analyitcs workspace from dropdown list",
                      "strongType": "omsWorkspace"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalyticsWorkspace')]"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "parameters": {
                            "logAnalyticsWorkspace": {
                              "value": "[parameters('logAnalyticsWorkspace')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "nsgName": {
                              "value": "[field('name')]"
                            }
                          },
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "nsgName": {
                                "type": "string"
                              },
                              "logAnalyticsWorkspace": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('nsgName'), '/', 'Microsoft.Insights/setByPolicy')]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalyticsWorkspace')]",
                                  "logs": [
                                    {
                                      "category": "NetworkSecurityGroupEvent",
                                      "enabled": true
                                    },
                                    {
                                      "category": "NetworkSecurityGroupRuleCounter",
                                      "enabled": true
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "Enable-Full-AzSubscription-Monitoring-Definition",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Enable-Full-AzSubscription-Monitoring-Definition",
              "ResourceName": "Enable-Full-AzSubscription-Monitoring-Definition",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Enable-Full-AzSubscription-Monitoring-Definition",
              "Properties": {
                "Description": null,
                "DisplayName": "Enforce-Full-AzSubscription-Monitoring",
                "Mode": "All",
                "Parameters": {
                  "workspaceName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide suffix for Log Analytics workspace that will be created per subscription"
                    }
                  },
                  "automationAccountName": {
                    "type": "String",
                    "metadata": {
                      "description": "Provide suffix for Automation account that will be crated per subscription"
                    }
                  },
                  "workspaceRegion": {
                    "type": "String",
                    "metadata": {
                      "description": "Select Azure region for Log Analytics"
                    }
                  },
                  "automationRegion": {
                    "type": "String",
                    "metadata": {
                      "description": "Select Azure region for Automation account"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Resources/resourceGroups",
                      "deploymentScope": "Subscription",
                      "existenceScope": "Subscription",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "name",
                            "like": "[concat(subscription().displayName, '-mgmt')]"
                          },
                          {
                            "field": "type",
                            "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                          }
                        ]
                      },
                      "deployment": {
                        "location": "westeurope",
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "rgName": {
                              "value": "[concat(subscription().displayName, '-mgmt')]"
                            },
                            "workspaceName": {
                              "value": "[concat(subscription().displayName, parameters('workspaceName'))]"
                            },
                            "workspaceRegion": {
                              "value": "[parameters('workspaceRegion')]"
                            },
                            "automationAccountName": {
                              "value": "[concat(subscription().displayName, parameters('automationAccountName'))]"
                            },
                            "automationRegion": {
                              "value": "[parameters('automationRegion')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "rgName": {
                                "type": "string"
                              },
                              "workspaceName": {
                                "type": "string"
                              },
                              "workspaceRegion": {
                                "type": "string"
                              },
                              "automationAccountName": {
                                "type": "string"
                              },
                              "automationRegion": {
                                "type": "string"
                              },
                              "rbacGuid": {
                                "type": "string",
                                "defaultValue": "[newGuid()]"
                              }
                            },
                            "variables": {
                              "policySet": {
                                "assignmentName": "Enforce VM Monitoring to Log Analytics",
                                "resourceId": "/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a"
                              }
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2018-05-01",
                                "name": "[parameters('rgName')]",
                                "location": "[deployment().location]",
                                "properties": {}
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "name": "[concat('mgmt', uniqueString('foo'))]",
                                "resourceGroup": "[parameters('rgName')]",
                                "dependsOn": [
                                  "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                ],
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [
                                      {
                                        "apiversion": "2015-10-31",
                                        "location": "[parameters('AutomationRegion')]",
                                        "name": "[parameters('AutomationAccountName')]",
                                        "type": "Microsoft.Automation/automationAccounts",
                                        "comments": "Automation account for ",
                                        "properties": {
                                          "sku": {
                                            "name": "OMS"
                                          }
                                        }
                                      },
                                      {
                                        "apiVersion": "2017-03-15-preview",
                                        "location": "[parameters('workspaceRegion')]",
                                        "name": "[parameters('workspaceName')]",
                                        "type": "Microsoft.OperationalInsights/workspaces",
                                        "properties": {
                                          "sku": {
                                            "name": "pernode"
                                          }
                                        },
                                        "resources": [
                                          {
                                            "name": "AzureActivityLog",
                                            "type": "datasources",
                                            "apiVersion": "2015-11-01-preview",
                                            "dependsOn": [
                                              "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                            ],
                                            "kind": "AzureActivityLog",
                                            "properties": {
                                              "linkedResourceId": "[concat(subscription().id, '/providers/Microsoft.Insights/eventTypes/management')]"
                                            }
                                          },
                                          {
                                            "name": "Automation",
                                            "type": "linkedServices",
                                            "apiVersion": "2015-11-01-preview",
                                            "dependsOn": [
                                              "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                                              "[resourceId('Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                            ],
                                            "properties": {
                                              "resourceId": "[concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "outputs": {}
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Authorization/policyAssignments",
                                "apiVersion": "2018-05-01",
                                "name": "[variables('policySet').assignmentName]",
                                "location": "[deployment().location]",
                                "identity": {
                                  "type": "SystemAssigned"
                                },
                                "properties": {
                                  "description": "Enforce VM Monitoring to Log Analytics",
                                  "displayName": "[variables('policySet').assignmentName]",
                                  "scope": "[subscription().id]",
                                  "policyDefinitionId": "[variables('policySet').resourceId]",
                                  "parameters": {
                                    "logAnalytics_1": {
                                      "value": "[toLower(concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')))]"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2018-05-01",
                                "location": "[deployment().location]",
                                "name": "[concat('builtInDelay', copyIndex())]",
                                "dependsOn": [
                                  "[variables('policySet').assignmentName]",
                                  "[concat('mgmt', uniqueString('foo'))]"
                                ],
                                "copy": {
                                  "name": "builtInDelayCopy",
                                  "count": 5,
                                  "mode": "Serial",
                                  "batchSize": 1
                                },
                                "properties": {
                                  "mode": "Incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "variables": {},
                                    "resources": [],
                                    "outputs": {}
                                  }
                                }
                              },
                              {
                                "type": "Microsoft.Authorization/roleAssignments",
                                "apiVersion": "2017-09-01",
                                "name": "[parameters('rbacGuid')]",
                                "dependsOn": [
                                  "builtInDelayCopy"
                                ],
                                "properties": {
                                  "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                                  "principalId": "[toLower(reference(variables('policySet').assignmentName, '2018-05-01', 'Full' ).identity.principalId)]"
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "enforce-AAD-admin-SQL",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-AAD-admin-SQL",
              "ResourceName": "enforce-AAD-admin-SQL",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-AAD-admin-SQL",
              "Properties": {
                "Description": "Deploys AAD Administrator account if not present",
                "DisplayName": "Enforce AAD Admin on SQL",
                "Mode": "All",
                "Parameters": null,
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.SQL/servers"
                  },
                  "then": {
                    "effect": "auditIfNotExists",
                    "details": {
                      "type": "Microsoft.SQL/servers/administrators"
                    }
                  }
                }
              }
            },
            {
              "Name": "enforce-ade-VMSS",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-ade-VMSS",
              "ResourceName": "enforce-ade-VMSS",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-ade-VMSS",
              "Properties": {
                "Description": "This policy deploys ADE VM Extensions on Windows VMSS, and connects to the regional KeyVault",
                "DisplayName": "Enable ADE on VMSS",
                "Mode": "Indexed",
                "Parameters": {
                  "keyVaultName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "KeyVault name",
                      "description": "Select regional KeyVault"
                    }
                  },
                  "keyVaultResourceGroup": {
                    "type": "String",
                    "metadata": {
                      "displayName": "KeyVault Resource Group",
                      "description": "Resource group containing the regional KeyVault",
                      "strongType": "existingResourceGroups"
                    }
                  },
                  "keyEncryptionKeyURL": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Key encryption URL",
                      "description": "Provide the encryption URL"
                    }
                  },
                  "location": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Key Vault and VMSS location",
                      "description": "Provide the location for the designated Key Vault to enable ADE on VMSS in that location",
                      "strongType": "location"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachineScaleSets"
                      },
                      {
                        "field": "Microsoft.Compute/imagePublisher",
                        "equals": "MicrosoftWindowsServer"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "equals": "WindowsServer"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "in": [
                          "2008-R2-SP1",
                          "2008-R2-SP1-smalldisk",
                          "2012-Datacenter",
                          "2012-Datacenter-smalldisk",
                          "2012-R2-Datacenter",
                          "2012-R2-Datacenter-smalldisk",
                          "2016-Datacenter",
                          "2016-Datacenter-Server-Core",
                          "2016-Datacenter-Server-Core-smalldisk",
                          "2016-Datacenter-smalldisk",
                          "2016-Datacenter-with-Containers",
                          "2016-Datacenter-with-RDSH"
                        ]
                      },
                      {
                        "field": "location",
                        "equals": "[parameters('location')]"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "name": "azureDiskEncryption",
                      "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                            "equals": "AzureDiskEncryption"
                          },
                          {
                            "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                            "equals": "Microsoft.Azure.Security"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmssName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of VMSS to be encrypted"
                                },
                                "maxLength": 61
                              },
                              "keyVaultName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of the KeyVault to place the volume encryption key"
                                }
                              },
                              "keyVaultResourceGroup": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource group of the KeyVault"
                                }
                              },
                              "keyEncryptionKeyURL": {
                                "type": "string",
                                "defaultValue": "",
                                "metadata": {
                                  "description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"
                                }
                              },
                              "keyEncryptionAlgorithm": {
                                "type": "string",
                                "defaultValue": "RSA-OAEP",
                                "metadata": {
                                  "description": "keyEncryptionAlgorithm used to wrap volume encryption key using KeyEncryptionKeyURL"
                                }
                              },
                              "volumeType": {
                                "type": "string",
                                "defaultValue": "All",
                                "metadata": {
                                  "description": "Type of the volume OS or Data to perform encryption operation"
                                }
                              },
                              "forceUpdateTag": {
                                "type": "string",
                                "defaultValue": "[uniqueString(resourceGroup().id, deployment().name)]",
                                "metadata": {
                                  "description": "Pass in an unique value like a GUID everytime the operation needs to be force run"
                                }
                              },
                              "resizeOSDisk": {
                                "type": "bool",
                                "defaultValue": false,
                                "metadata": {
                                  "description": "Should the OS partition be resized to occupy full OS VHD before splitting system volume"
                                }
                              },
                              "location": {
                                "type": "string",
                                "metadata": {
                                  "description": "Location required to map to the appropriate KeyVault"
                                }
                              }
                            },
                            "variables": {
                              "keyVaultResourceID": "[resourceId(parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                                "name": "[concat(parameters('vmssName'),'/', 'AzureDiskEncryption')]",
                                "location": "[parameters('location')]",
                                "apiVersion": "2017-03-30",
                                "properties": {
                                  "publisher": "Microsoft.Azure.Security",
                                  "type": "AzureDiskEncryption",
                                  "typeHandlerVersion": "2.2",
                                  "autoUpgradeMinorVersion": true,
                                  "forceUpdateTag": "[parameters('forceUpdateTag')]",
                                  "settings": {
                                    "EncryptionOperation": "EnableEncryption",
                                    "KeyVaultURL": "[reference(variables('keyVaultResourceId'),'2018-02-14-preview').vaultUri]",
                                    "KeyVaultResourceId": "[variables('keyVaultResourceID')]",
                                    "KeyEncryptionKeyURL": "[parameters('keyEncryptionKeyURL')]",
                                    "KekVaultResourceId": "[variables('keyVaultResourceID')]",
                                    "KeyEncryptionAlgorithm": "[parameters('keyEncryptionAlgorithm')]",
                                    "VolumeType": "[parameters('volumeType')]",
                                    "ResizeOSDisk": "[parameters('resizeOSDisk')]"
                                  }
                                }
                              }
                            ],
                            "outputs": {
                              "status": {
                                "type": "string",
                                "value": "[concat('Successfully enabled disk encryption on VMSS:', ' ', parameters('vmssName'))]"
                              }
                            }
                          },
                          "parameters": {
                            "vmssName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "keyVaultName": {
                              "value": "[parameters('keyVaultName')]"
                            },
                            "keyVaultResourceGroup": {
                              "value": "[parameters('keyVaultResourceGroup')]"
                            },
                            "keyEncryptionKeyURL": {
                              "value": "[parameters('keyEncryptionKeyUrl')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "enforce-https-functions",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-https-functions",
              "ResourceName": "enforce-https-functions",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-https-functions",
              "Properties": {
                "Description": "Enforce https traffic only for functions",
                "DisplayName": "Enforce https traffic only for functions",
                "Mode": "Indexed",
                "Parameters": null,
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Web/sites"
                      },
                      {
                        "not": {
                          "field": "Microsoft.Web/sites/httpsOnly",
                          "equals": "true"
                        }
                      }
                    ]
                  },
                  "then": {
                    "effect": "deny"
                  }
                }
              }
            },
            {
              "Name": "enforce-https-storage",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-https-storage",
              "ResourceName": "enforce-https-storage",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/enforce-https-storage",
              "Properties": {
                "Description": "Enforce https traffic-only for storage account",
                "DisplayName": "Enforce https traffic-only for storage account",
                "Mode": "Indexed",
                "Parameters": null,
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Storage/storageAccounts"
                      },
                      {
                        "not": {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "equals": "true"
                        }
                      }
                    ]
                  },
                  "then": {
                    "effect": "deny"
                  }
                }
              }
            },
            {
              "Name": "Enforce-Monitoring-KeyVault",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Enforce-Monitoring-KeyVault",
              "ResourceName": "Enforce-Monitoring-KeyVault",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/Enforce-Monitoring-KeyVault",
              "Properties": {
                "Description": "Enforce monitoring of KeyVaults to Log Analytics",
                "DisplayName": "Enforce Monitoring of KeyVaults",
                "Mode": "All",
                "Parameters": {
                  "logAnalytics": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Log Analytics workspace",
                      "description": "Select the Log Analytics workspace from dropdown list",
                      "strongType": "omsWorkspace"
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "field": "type",
                    "equals": "Microsoft.KeyVault/vaults"
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24cb24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                            "equals": "true"
                          },
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                            "equals": "[parameters('logAnalytics')]"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "logAnalytics": {
                              "value": "[parameters('logAnalytics')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "vaultName": {
                              "value": "[field('name')]"
                            }
                          },
                          "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vaultName": {
                                "type": "string"
                              },
                              "logAnalytics": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
                                "apiVersion": "2017-05-01-preview",
                                "name": "[concat(parameters('vaultName'), '/', 'Microsoft.Insights/setByPolicy')]",
                                "location": "[parameters('location')]",
                                "dependsOn": [],
                                "properties": {
                                  "workspaceId": "[parameters('logAnalytics')]",
                                  "metrics": [
                                    {
                                      "category": "AllMetrics",
                                      "enabled": true,
                                      "retentionPolicy": {
                                        "enabled": false,
                                        "days": 0
                                      }
                                    }
                                  ],
                                  "logs": [
                                    {
                                      "category": "AuditEvent",
                                      "enabled": true
                                    }
                                  ]
                                }
                              }
                            ],
                            "outputs": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "Name": "f66b20d0-159a-4ae9-9675-096eca331170",
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/f66b20d0-159a-4ae9-9675-096eca331170",
              "ResourceName": "f66b20d0-159a-4ae9-9675-096eca331170",
              "ResourceType": "Microsoft.Authorization/policyDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0",
              "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/f66b20d0-159a-4ae9-9675-096eca331170",
              "Properties": {
                "Description": null,
                "DisplayName": "central windows backup",
                "Mode": "All",
                "Parameters": {
                  "listOfImageIdToInclude": {
                    "type": "Array",
                    "metadata": {
                      "displayName": "Optional: List of VM images that have supported Windows OS to add to scope",
                      "description": "Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'"
                    },
                    "defaultValue": []
                  },
                  "backupVaultResourceGroup": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Resource Group name for the backup vault",
                      "description": "Provide the resource group name where the backup vault is located."
                    }
                  },
                  "backupVaultRegion": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Azure Region where the backup vault is located.",
                      "description": "Select the Azure Region where the backup vault is deployed."
                    }
                  },
                  "backupVaultName": {
                    "type": "String",
                    "metadata": {
                      "displayName": "Name of existing Backup Vault.",
                      "description": "Provide the resource name of the existing Backup Vault."
                    }
                  }
                },
                "PolicyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "field": "location",
                        "equals": "[parameters('backupVaultRegion')]"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Compute/imageId",
                            "in": "[parameters('listOfImageIdToInclude')]"
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "in": [
                                  "2008-R2-SP1",
                                  "2008-R2-SP1-smalldisk",
                                  "2012-Datacenter",
                                  "2012-Datacenter-smalldisk",
                                  "2012-R2-Datacenter",
                                  "2012-R2-Datacenter-smalldisk",
                                  "2016-Datacenter",
                                  "2016-Datacenter-Server-Core",
                                  "2016-Datacenter-Server-Core-smalldisk",
                                  "2016-Datacenter-smalldisk",
                                  "2016-Datacenter-with-Containers",
                                  "2016-Datacenter-with-RDSH",
                                  "2019-Datacenter",
                                  "2019-Datacenter-Core",
                                  "2019-Datacenter-Core-smalldisk",
                                  "2019-Datacenter-Core-with-Containers",
                                  "2019-Datacenter-Core-with-Containers-smalldisk",
                                  "2019-Datacenter-smalldisk",
                                  "2019-Datacenter-with-Containers",
                                  "2019-Datacenter-with-Containers-smalldisk",
                                  "2019-Datacenter-zhcn"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServerSemiAnnual"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "in": [
                                  "Datacenter-Core-1709-smalldisk",
                                  "Datacenter-Core-1709-with-Containers-smalldisk",
                                  "Datacenter-Core-1803-with-Containers-smalldisk"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsServerHPCPack"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "WindowsServerHPCPack"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftSQLServer"
                              },
                              {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2016"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2016-BYOL"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2012R2"
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "like": "*-WS2012R2-BYOL"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftRServer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "MLServer-WS2016"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftVisualStudio"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "in": [
                                  "VisualStudio",
                                  "Windows"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftDynamicsAX"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Dynamics"
                              },
                              {
                                "field": "Microsoft.Compute/imageSKU",
                                "equals": "Pre-Req-AX7-Onebox-U8"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "microsoft-ads"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "windows-data-science-vm"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Compute/imagePublisher",
                                "equals": "MicrosoftWindowsDesktop"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "equals": "Windows-10"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "resourceGroupName": "[parameters('backupVaultResourceGroup')]",
                      "type": "Microsoft.RecoveryServices/backupprotecteditems",
                      "roleDefinitionIds": [
                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "existenceCondition": {
                        "field": "name",
                        "like": "*"
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "vmName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Name of Azure Virtual Machines"
                                }
                              },
                              "vmRgName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource group containing the virtual machines."
                                }
                              },
                              "location": {
                                "type": "string",
                                "metadata": {
                                  "description": "Location for VM and Backup vault"
                                }
                              },
                              "backupVaultResourceGroup": {
                                "type": "string",
                                "metadata": {
                                  "description": "Resource Group for Backup vault."
                                }
                              },
                              "backupVaultName": {
                                "type": "string",
                                "metadata": {
                                  "description": "Backup Vault name."
                                }
                              }
                            },
                            "variables": {
                              "backupFabric": "Azure",
                              "backupPolicy": "DefaultPolicy",
                              "v2VmType": "Microsoft.Compute/virtualMachines",
                              "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                              "v2Vm": "vm;iaasvmcontainerv2;"
                            },
                            "resources": [
                              {
                                "name": "[concat(parameters('backupvaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                                "apiVersion": "2016-12-01",
                                "location": "[parameters('location')]",
                                "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                "dependsOn": [],
                                "properties": {
                                  "protectedItemType": "[variables('v2VmType')]",
                                  "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('backupVaultName'),variables('backupPolicy'))]",
                                  "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                                }
                              }
                            ],
                            "outputs": {
                              "status": {
                                "type": "string",
                                "value": "[concat('Backup enabled successfully for VM:', ' ', parameters('vmName'))]"
                              }
                            }
                          },
                          "parameters": {
                            "vmName": {
                              "value": "[field('name')]"
                            },
                            "location": {
                              "value": "[field('location')]"
                            },
                            "vmRgName": {
                              "value": "[resourceGroup().name]"
                            },
                            "backupVaultName": {
                              "value": "[parameters('backupVaultName')]"
                            },
                            "backupVaultResourceGroup": {
                              "value": "[parameters('backupVaultResourceGroup')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "policySetDefinitions": [
            {
              "Name": "91696727-c304-4202-96a9-2c47ab296d64",
              "PolicySetDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policySetDefinitions/91696727-c304-4202-96a9-2c47ab296d64",
              "Properties": {
                "Description": "Resource groups are required to have a tag 'applicationOwner'. Resources automatically inherit the tag and its value from the resource group.",
                "DisplayName": "Enforce tag requirements on RG and resources",
                "Parameters": {},
                "PolicyDefinitionGroups": null,
                "PolicyDefinitions": [
                  {
                    "policyDefinitionReferenceId": "13906723337814827360",
                    "policyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/91696727-c304-4202-96a9-2c47ab296d59",
                    "parameters": {
                      "tagName": {
                        "value": "applicationOwner"
                      }
                    }
                  },
                  {
                    "policyDefinitionReferenceId": "7285347029911246181",
                    "policyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/91696727-c304-4202-96a9-2c47ab296d5d",
                    "parameters": {
                      "tagName": {
                        "value": "applicationOwner"
                      }
                    }
                  }
                ]
              },
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policySetDefinitions/91696727-c304-4202-96a9-2c47ab296d64",
              "ResourceName": "91696727-c304-4202-96a9-2c47ab296d64",
              "ResourceType": "Microsoft.Authorization/policySetDefinitions",
              "SubscriptionId": "0a938bc2-0bb8-4688-bd37-9964427fe0b0"
            }
          ],
          "policyAssignments": [
            {
              "Identity": null,
              "Location": null,
              "Name": "f43d3655285e4917a21dfae0",
              "PolicyAssignmentId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyAssignments/f43d3655285e4917a21dfae0",
              "Properties": {
                "Description": null,
                "DisplayName": "Databricks",
                "NotScopes": null,
                "Parameters": {},
                "PolicyDefinitionId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyDefinitions/5a1eb11f-aac8-43bb-b714-775f17ddf0b1",
                "Scope": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0"
              },
              "ResourceId": "/subscriptions/0a938bc2-0bb8-4688-bd37-9964427fe0b0/providers/Microsoft.Authorization/policyAssignments/f43d3655285e4917a21dfae0",
              "ResourceName": "f43d3655285e4917a21dfae0",
              "ResourceType": "Microsoft.Authorization/policyAssignments",
              "Sku": {
                "name": "A0",
                "tier": "Free"
              }
            }
          ],
          "roleDefinitions": [],
          "roleAssignments": []
        }
      }
    }
  }
}
